version: "3.7"

services:
  #######################################
  # Postgres: Kong Database
  #######################################
  kong-db:
    image: postgres:9.6-alpine
    container_name: kong-db
    hostname: kong-db
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    networks:
      - default
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - /var/lib/postgres/kong-db/data:/var/lib/postgresql/data
  
  #######################################
  # Kong database migration
  #######################################
  kong-migrations:
    image: kong:latest
    command: kong migrations bootstrap
    depends_on:
      kong-db:
        condition: service_healthy
    env_file:
      - ./services/kong/kong.env
    networks:
      - default
    restart: on-failure

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:latest
    container_name: kong
    hostname: kong
    depends_on:
      kong-db:
        condition: service_healthy
    env_file:
      - services/kong/kong.env
    networks:
      - default
      - service
    ports:
      - "127.0.0.1:8001:8001"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  #######################################
  # Konga database migration
  #######################################
  konga-prepare:
    image: pantsel/konga
    command: "-c prepare -a postgres -u postgresql://kong:kong@kong-db:5432/konga_db"
    networks:
      - default
    restart: on-failure
    depends_on:
      kong-db:
        condition: service_healthy

  #######################################
  # Konga: GUI of KONG Admin API
  #######################################
  konga:
    image: pantsel/konga
    container_name: konga
    hostname: konga
    env_file:
      - services/kong/kong.env
    networks:
      - default
      - service
    restart: on-failure
    depends_on:
      kong-db:
        condition: service_healthy

  redis:
    container_name: redis
    hostname: redis
    image: redis
    ports:
      - 6379:6379
    networks:
      - default
      - service
    restart: unless-stopped

  cassandra:
    image: docker.io/bitnami/cassandra:4.0
    hostname: cassandra
    container_name: cassandra
    ports:
      - 7000:7000
      - 7001:7001
      - 7199:7199
      - 9042:9042
      - 9160:9160
    environment:
      CASSANDRA_SEEDS: cassandra
      MAX_HEAP_SIZE: 512M
      HEAP_NEWSIZE: 100M
      CASSANDRA_PASSWORD_SEEDER: "yes"
      CASSANDRA_PASSWORD: cassandra
      CASSANDRA_RPC_ADDRESS: 0.0.0.0
    restart: unless-stopped
    networks:
      - default
      - service

  rabbitmq:
    image: rabbitmq
    hostname: rabbitmq
    container_name: rabbitmq
    restart: unless-stopped
    networks:
      - default
      - service

  mongo:
    image: mongo
    hostname: mongo
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - /my/own/datadir:/data/db
    networks:
      - default
      - service

  mongo-express:
    image: mongo-express
    hostname: mongo-express
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - 10100:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    networks:
      - default
      - service

networks:
  service:
    external: true